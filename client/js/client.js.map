{"version":3,"sources":["client.js"],"names":["SOCKET_URL","constructor","console","send","message","handleOpen","conn","sendNewMessage","evt","detail","document","sendNewGif","gifUrl","handleGif","payload","JSON","gif","mesg","handelError","error"],"mappings":"AAAA,MAAA,UAAA,CAAiB;AAChBA,EAAAA,UAAU,GAAA,qBAAA;;AACVC,EAAAA,WAAW,GAAG;AACbC,IAAAA,OAAO,CAAPA,GAAAA,CAAAA,gBAAAA;AACA,SAAA,EAAA,GAAU,IAAA,SAAA,CAAc,KAAxB,UAAU,CAAV;AAEA,SAAA,EAAA,CAAA,MAAA,GAAiB,KAJJ,UAIb,CAJa,CAKb;;AACA,SAAA,EAAA,CAAA,SAAA,GAAoB,KAApB,SAAA;AACA,SAAA,EAAA,CAAA,OAAA,GAAkB,KAAlB,WAAA;AACA;;AAEDC,EAAAA,IAAI,GAAIC,OAAD,IAAa;AACnB,SAAA,EAAA,CAAA,IAAA,CAAA,OAAA;AADG,GAAA;AAIJC,EAAAA,UAAU,GAAIC,IAAD,IAAU;AACtBJ,IAAAA,OAAO,CAAPA,GAAAA,CAAAA,iBAAAA,EAAAA,IAAAA;AADS,GAAA;AAIVK,EAAAA,cAAc,GAAIH,OAAD,IAAa;AAC7B,UAAMI,GAAG,GAAG,IAAA,WAAA,CAAA,YAAA,EAA8B;AAAEC,MAAAA,MAAM,EAAEL;AAAV,KAA9B,CAAZ;AACAM,IAAAA,QAAQ,CAARA,aAAAA,CAAAA,GAAAA;AAFa,GAAA;AAIdC,EAAAA,UAAU,GAAIC,MAAD,IAAY;AACxB,UAAMJ,GAAG,GAAG,IAAA,WAAA,CAAA,QAAA,EAA0B;AAAEC,MAAAA,MAAM,EAAEG;AAAV,KAA1B,CAAZ;AACAF,IAAAA,QAAQ,CAARA,aAAAA,CAAAA,GAAAA;AAFS,GAAA;AAIVG,EAAAA,SAAS,GAAIL,GAAD,IAAS;AACpB,UAAMM,OAAO,GAAGC,IAAI,CAAJA,KAAAA,CAAWP,GAAG,CAA9B,IAAgBO,CAAhB;AACAb,IAAAA,OAAO,CAAPA,GAAAA,CAAAA,sBAAAA,EAAAA,OAAAA;;AACA,QAAIY,OAAO,CAAPA,OAAAA,IAAJ,SAAA,EAAkC,CACjC;AACA;;AACD,QAAIA,OAAO,CAAPA,MAAAA,IAAJ,SAAA,EAAiC;AAChC,WAAA,UAAA,CAAgBA,OAAO,CAAvB,MAAA;AADD,KAAA,MAEO,IAAIA,OAAO,CAAPA,OAAAA,IAAJ,SAAA,EAAkC;AACxCA,MAAAA,OAAO,CAAPA,OAAAA,CAAAA,OAAAA,CAAyBE,GAAD,IAAS,KAAA,UAAA,CAAjCF,GAAiC,CAAjCA;AACA;;AACD,QAAIA,OAAO,CAAPA,OAAAA,IAAJ,SAAA,EAAkC;AACjC,WAAA,cAAA,CAAoBA,OAAO,CAA3B,OAAA;AADD,KAAA,MAEO,IAAIA,OAAO,CAAPA,QAAAA,IAAJ,SAAA,EAAmC;AACzCA,MAAAA,OAAO,CAAPA,QAAAA,CAAAA,OAAAA,CAA0BG,IAAD,IAAU,KAAA,cAAA,CAAnCH,IAAmC,CAAnCA;AACA;AA3Cc,GA4BP,CA5BO,CA8ChB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAI,EAAAA,WAAW,GAAIC,KAAD,IAAW;AACxBjB,IAAAA,OAAO,CAAPA,KAAAA,CAAAA,cAAAA,EAAAA,KAAAA;AADU,GAAA;AAtDK","sourcesContent":["class ChatClient {\n\tSOCKET_URL = 'ws://localhost:8080';\n\tconstructor() {\n\t\tconsole.log('new ChatClient');\n\t\tthis.ws = new WebSocket(this.SOCKET_URL);\n\n\t\tthis.ws.onopen = this.handleOpen;\n\t\t// this.ws.onmessage = this.handleMessage;\n\t\tthis.ws.onmessage = this.handleGif;\n\t\tthis.ws.onerror = this.handelError;\n\t}\n\n\tsend = (message) => {\n\t\tthis.ws.send(message);\n\t};\n\n\thandleOpen = (conn) => {\n\t\tconsole.log('connection open', conn);\n\t};\n\n\tsendNewMessage = (message) => {\n\t\tconst evt = new CustomEvent('addMessage', { detail: message });\n\t\tdocument.dispatchEvent(evt);\n\t};\n\tsendNewGif = (gifUrl) => {\n\t\tconst evt = new CustomEvent('addGif', { detail: gifUrl });\n\t\tdocument.dispatchEvent(evt);\n\t};\n\thandleGif = (evt) => {\n\t\tconst payload = JSON.parse(evt.data);\n\t\tconsole.log('received gif payload', payload);\n\t\tif (payload.clients != undefined) {\n\t\t\t//send event with client count\n\t\t}\n\t\tif (payload.gifUrl != undefined) {\n\t\t\tthis.sendNewGif(payload.gifUrl);\n\t\t} else if (payload.gifUrls != undefined) {\n\t\t\tpayload.gifUrls.forEach((gif) => this.sendNewGif(gif));\n\t\t}\n\t\tif (payload.message != undefined) {\n\t\t\tthis.sendNewMessage(payload.message);\n\t\t} else if (payload.messages != undefined) {\n\t\t\tpayload.messages.forEach((mesg) => this.sendNewMessage(mesg));\n\t\t}\n\t};\n\n\t// handleMessage = (evt) => {\n\t// \tconst payload = JSON.parse(evt.data);\n\t// \tconsole.log('received payload', payload);\n\t// \tif (payload.clients != undefined) {\n\t// \t\t//send event with client count\n\t// \t}\n\t// };\n\n\thandelError = (error) => {\n\t\tconsole.error('got an error', error);\n\t};\n}\n"],"file":"client.js"}